/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Mock,
  MockInterface,
} from "../../../../contracts/mocks/ERC721.sol/Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600a553480156200001657600080fd5b506040518060400160405280600a81526020017f436f6c6c656374696f6e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f434f4c4c0000000000000000000000000000000000000000000000000000000081525081600090805190602001906200009b929190620000dc565b508060019080519060200190620000b4929190620000dc565b505050620000d367bae429a1135097d960c01b620000d960201b60201c565b620001f1565b50565b828054620000ea90620001bb565b90600052602060002090601f0160209004810192826200010e57600085556200015a565b82601f106200012957805160ff19168380011785556200015a565b828001600101855582156200015a579182015b82811115620001595782518255916020019190600101906200013c565b5b5090506200016991906200016d565b5090565b5b80821115620001885760008160009055506001016200016e565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001d457607f821691505b60208210811415620001eb57620001ea6200018c565b5b50919050565b612e6080620002016000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635d1ca631116100ad578063a22cb46511610071578063a22cb4651461032e578063b88d4fde1461034a578063bda208d114610366578063c87b56dd14610370578063e985e9c5146103a057610121565b80635d1ca631146102765780636352211e1461029457806370a08231146102c457806394bf804d146102f457806395d89b411461031057610121565b806318160ddd116100f457806318160ddd146101c057806323b872dd146101de5780632f745c59146101fa57806342842e0e1461022a5780634f6ccce71461024657610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611e2c565b6103d0565b60405161014d9190611e74565b60405180910390f35b61015e61044a565b60405161016b9190611f28565b60405180910390f35b61018e60048036038101906101899190611f80565b6104dc565b60405161019b9190611fee565b60405180910390f35b6101be60048036038101906101b99190612035565b610522565b005b6101c861063a565b6040516101d59190612084565b60405180910390f35b6101f860048036038101906101f3919061209f565b610647565b005b610214600480360381019061020f9190612035565b6106a7565b6040516102219190612084565b60405180910390f35b610244600480360381019061023f919061209f565b61074c565b005b610260600480360381019061025b9190611f80565b61076c565b60405161026d9190612084565b60405180910390f35b61027e6107dd565b60405161028b9190612084565b60405180910390f35b6102ae60048036038101906102a99190611f80565b610823565b6040516102bb9190611fee565b60405180910390f35b6102de60048036038101906102d991906120f2565b6108d5565b6040516102eb9190612084565b60405180910390f35b61030e6004803603810190610309919061211f565b61098d565b005b610318610a53565b6040516103259190611f28565b60405180910390f35b6103486004803603810190610343919061218b565b610ae5565b005b610364600480360381019061035f9190612300565b610afb565b005b61036e610b5d565b005b61038a60048036038101906103859190611f80565b610b9e565b6040516103979190611f28565b60405180910390f35b6103ba60048036038101906103b59190612383565b610c06565b6040516103c79190611e74565b60405180910390f35b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610443575061044282610c9a565b5b9050919050565b606060008054610459906123f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610485906123f2565b80156104d25780601f106104a7576101008083540402835291602001916104d2565b820191906000526020600020905b8154815290600101906020018083116104b557829003601f168201915b5050505050905090565b60006104e782610d7c565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061052d82610823565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059590612496565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105bd610dc7565b73ffffffffffffffffffffffffffffffffffffffff1614806105ec57506105eb816105e6610dc7565b610c06565b5b61062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290612528565b60405180910390fd5b6106358383610dcf565b505050565b6000600880549050905090565b610658610652610dc7565b82610e88565b610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e906125ba565b60405180910390fd5b6106a2838383610f1d565b505050565b60006106b2836108d5565b82106106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea9061264c565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b61076783838360405180602001604052806000815250610afb565b505050565b600061077661063a565b82106107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae906126de565b60405180910390fd5b600882815481106107cb576107ca6126fe565b5b90600052602060002001549050919050565b60006107f3678f6b6dc1b8138c9f60c01b611184565b610807671874069744b2831f60c01b611184565b61081b673d7c87c4d6d7531960c01b611184565b600a54905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c390612779565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d9061280b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109a167328726eed153638c60c01b611184565b6109b5672f2ffdaacb69201060c01b611184565b6109c96787bdcafff31ea73e60c01b611184565b60005b82811015610a4e576109e86740ece8c4c631933560c01b611184565b6109fc675c32b0b147184cc060c01b611184565b610a0d82610a0861063a565b611187565b610a216724cf63994a879ccb60c01b611184565b610a3567336cf7e8a27e0af660c01b611184565b610a3d610b5d565b80610a479061285a565b90506109cc565b505050565b606060018054610a62906123f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8e906123f2565b8015610adb5780601f10610ab057610100808354040283529160200191610adb565b820191906000526020600020905b815481529060010190602001808311610abe57829003601f168201915b5050505050905090565b610af7610af0610dc7565b83836111a5565b5050565b610b0c610b06610dc7565b83610e88565b610b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b42906125ba565b60405180910390fd5b610b5784848484611312565b50505050565b610b7066acd1857e8e151b60c01b611184565b610b84675a51f14822b6918760c01b611184565b600a6000815480929190610b979061285a565b9190505550565b6060610ba982610d7c565b6000610bb361136e565b90506000815111610bd35760405180602001604052806000815250610bfe565b80610bdd84611385565b604051602001610bee9291906128df565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d6557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d755750610d74826114e6565b5b9050919050565b610d8581611550565b610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb90612779565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e4283610823565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e9483610823565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ed65750610ed58185610c06565b5b80610f1457508373ffffffffffffffffffffffffffffffffffffffff16610efc846104dc565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f3d82610823565b73ffffffffffffffffffffffffffffffffffffffff1614610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a90612975565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611003576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa90612a07565b60405180910390fd5b61100e8383836115bc565b611019600082610dcf565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110699190612a27565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110c09190612a5b565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461117f8383836116d0565b505050565b50565b6111a18282604051806020016040528060008152506116d5565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120b90612afd565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113059190611e74565b60405180910390a3505050565b61131d848484610f1d565b61132984848484611730565b611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135f90612b8f565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008214156113cd576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506114e1565b600082905060005b600082146113ff5780806113e89061285a565b915050600a826113f89190612bde565b91506113d5565b60008167ffffffffffffffff81111561141b5761141a6121d5565b5b6040519080825280601f01601f19166020018201604052801561144d5781602001600182028036833780820191505090505b5090505b600085146114da576001826114669190612a27565b9150600a856114759190612c0f565b60306114819190612a5b565b60f81b818381518110611497576114966126fe565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856114d39190612bde565b9450611451565b8093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6115c78383836118b8565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561160a57611605816118bd565b611649565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611648576116478382611906565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561168c5761168781611a73565b6116cb565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146116ca576116c98282611b44565b5b5b505050565b505050565b6116df8383611bc3565b6116ec6000848484611730565b61172b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172290612b8f565b60405180910390fd5b505050565b60006117518473ffffffffffffffffffffffffffffffffffffffff16611d9d565b156118ab578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261177a610dc7565b8786866040518563ffffffff1660e01b815260040161179c9493929190612c95565b6020604051808303816000875af19250505080156117d857506040513d601f19601f820116820180604052508101906117d59190612cf6565b60015b61185b573d8060008114611808576040519150601f19603f3d011682016040523d82523d6000602084013e61180d565b606091505b50600081511415611853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184a90612b8f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506118b0565b600190505b949350505050565b505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001611913846108d5565b61191d9190612a27565b9050600060076000848152602001908152602001600020549050818114611a02576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600880549050611a879190612a27565b9050600060096000848152602001908152602001600020549050600060088381548110611ab757611ab66126fe565b5b906000526020600020015490508060088381548110611ad957611ad86126fe565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480611b2857611b27612d23565b5b6001900381819060005260206000200160009055905550505050565b6000611b4f836108d5565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2a90612d9e565b60405180910390fd5b611c3c81611550565b15611c7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7390612e0a565b60405180910390fd5b611c88600083836115bc565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cd89190612a5b565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d99600083836116d0565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e0981611dd4565b8114611e1457600080fd5b50565b600081359050611e2681611e00565b92915050565b600060208284031215611e4257611e41611dca565b5b6000611e5084828501611e17565b91505092915050565b60008115159050919050565b611e6e81611e59565b82525050565b6000602082019050611e896000830184611e65565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ec9578082015181840152602081019050611eae565b83811115611ed8576000848401525b50505050565b6000601f19601f8301169050919050565b6000611efa82611e8f565b611f048185611e9a565b9350611f14818560208601611eab565b611f1d81611ede565b840191505092915050565b60006020820190508181036000830152611f428184611eef565b905092915050565b6000819050919050565b611f5d81611f4a565b8114611f6857600080fd5b50565b600081359050611f7a81611f54565b92915050565b600060208284031215611f9657611f95611dca565b5b6000611fa484828501611f6b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fd882611fad565b9050919050565b611fe881611fcd565b82525050565b60006020820190506120036000830184611fdf565b92915050565b61201281611fcd565b811461201d57600080fd5b50565b60008135905061202f81612009565b92915050565b6000806040838503121561204c5761204b611dca565b5b600061205a85828601612020565b925050602061206b85828601611f6b565b9150509250929050565b61207e81611f4a565b82525050565b60006020820190506120996000830184612075565b92915050565b6000806000606084860312156120b8576120b7611dca565b5b60006120c686828701612020565b93505060206120d786828701612020565b92505060406120e886828701611f6b565b9150509250925092565b60006020828403121561210857612107611dca565b5b600061211684828501612020565b91505092915050565b6000806040838503121561213657612135611dca565b5b600061214485828601611f6b565b925050602061215585828601612020565b9150509250929050565b61216881611e59565b811461217357600080fd5b50565b6000813590506121858161215f565b92915050565b600080604083850312156121a2576121a1611dca565b5b60006121b085828601612020565b92505060206121c185828601612176565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61220d82611ede565b810181811067ffffffffffffffff8211171561222c5761222b6121d5565b5b80604052505050565b600061223f611dc0565b905061224b8282612204565b919050565b600067ffffffffffffffff82111561226b5761226a6121d5565b5b61227482611ede565b9050602081019050919050565b82818337600083830152505050565b60006122a361229e84612250565b612235565b9050828152602081018484840111156122bf576122be6121d0565b5b6122ca848285612281565b509392505050565b600082601f8301126122e7576122e66121cb565b5b81356122f7848260208601612290565b91505092915050565b6000806000806080858703121561231a57612319611dca565b5b600061232887828801612020565b945050602061233987828801612020565b935050604061234a87828801611f6b565b925050606085013567ffffffffffffffff81111561236b5761236a611dcf565b5b612377878288016122d2565b91505092959194509250565b6000806040838503121561239a57612399611dca565b5b60006123a885828601612020565b92505060206123b985828601612020565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061240a57607f821691505b6020821081141561241e5761241d6123c3565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612480602183611e9a565b915061248b82612424565b604082019050919050565b600060208201905081810360008301526124af81612473565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000612512603e83611e9a565b915061251d826124b6565b604082019050919050565b6000602082019050818103600083015261254181612505565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b60006125a4602e83611e9a565b91506125af82612548565b604082019050919050565b600060208201905081810360008301526125d381612597565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000612636602b83611e9a565b9150612641826125da565b604082019050919050565b6000602082019050818103600083015261266581612629565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b60006126c8602c83611e9a565b91506126d38261266c565b604082019050919050565b600060208201905081810360008301526126f7816126bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612763601883611e9a565b915061276e8261272d565b602082019050919050565b6000602082019050818103600083015261279281612756565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006127f5602983611e9a565b915061280082612799565b604082019050919050565b60006020820190508181036000830152612824816127e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061286582611f4a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128985761289761282b565b5b600182019050919050565b600081905092915050565b60006128b982611e8f565b6128c381856128a3565b93506128d3818560208601611eab565b80840191505092915050565b60006128eb82856128ae565b91506128f782846128ae565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061295f602583611e9a565b915061296a82612903565b604082019050919050565b6000602082019050818103600083015261298e81612952565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006129f1602483611e9a565b91506129fc82612995565b604082019050919050565b60006020820190508181036000830152612a20816129e4565b9050919050565b6000612a3282611f4a565b9150612a3d83611f4a565b925082821015612a5057612a4f61282b565b5b828203905092915050565b6000612a6682611f4a565b9150612a7183611f4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612aa657612aa561282b565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612ae7601983611e9a565b9150612af282612ab1565b602082019050919050565b60006020820190508181036000830152612b1681612ada565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612b79603283611e9a565b9150612b8482612b1d565b604082019050919050565b60006020820190508181036000830152612ba881612b6c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612be982611f4a565b9150612bf483611f4a565b925082612c0457612c03612baf565b5b828204905092915050565b6000612c1a82611f4a565b9150612c2583611f4a565b925082612c3557612c34612baf565b5b828206905092915050565b600081519050919050565b600082825260208201905092915050565b6000612c6782612c40565b612c718185612c4b565b9350612c81818560208601611eab565b612c8a81611ede565b840191505092915050565b6000608082019050612caa6000830187611fdf565b612cb76020830186611fdf565b612cc46040830185612075565b8181036060830152612cd68184612c5c565b905095945050505050565b600081519050612cf081611e00565b92915050565b600060208284031215612d0c57612d0b611dca565b5b6000612d1a84828501612ce1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612d88602083611e9a565b9150612d9382612d52565b602082019050919050565b60006020820190508181036000830152612db781612d7b565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612df4601c83611e9a565b9150612dff82612dbe565b602082019050919050565b60006020820190508181036000830152612e2381612de7565b905091905056fea26469706673582212206e6f74675e255962228f8d1d4f6d20207b3274aaabedaf6ab7a4b331d5feda4864736f6c634300080b0033";

type MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mock__factory extends ContractFactory {
  constructor(...args: MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Mock> {
    return super.deploy(overrides || {}) as Promise<Mock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Mock {
    return super.attach(address) as Mock;
  }
  override connect(signer: Signer): Mock__factory {
    return super.connect(signer) as Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInterface {
    return new utils.Interface(_abi) as MockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Mock {
    return new Contract(address, _abi, signerOrProvider) as Mock;
  }
}
