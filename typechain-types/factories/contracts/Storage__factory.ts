/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Storage, StorageInterface } from "../../contracts/Storage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_id",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "Store",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_id",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_unstaker",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_id",
        type: "uint256[]",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_id",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e34806100206000396000f3fe6080604052600436106100345760003560e01c8063429e674b146100395780638293744b14610055578063e77d35a31461007e575b600080fd5b610053600480360381019061004e91906109e1565b6100bd565b005b34801561006157600080fd5b5061007c600480360381019061007791906109e1565b610174565b005b34801561008a57600080fd5b506100a560048036038101906100a09190610a3d565b61022b565b6040516100b493929190610b5d565b60405180910390f35b600181511461010e5760005b8151811015610108576100f7838383815181106100e9576100e8610b9b565b5b60200260200101513361036d565b8061010190610bf9565b90506100c9565b50610135565b610134828260008151811061012657610125610b9b565b5b60200260200101513361036d565b5b7fb1f4342da638c10de9fb8ddd511ae5d3019e7db9fe63f8b58b0e7b73f23b7a9082823360405161016893929190610c51565b60405180910390a15050565b60018151146101c55760005b81518110156101bf576101ae838383815181106101a05761019f610b9b565b5b60200260200101513361056a565b806101b890610bf9565b9050610180565b506101ec565b6101eb82826000815181106101dd576101dc610b9b565b5b60200260200101513361056a565b5b7f2914fb8a46e50bef641e8ad5afbe361259bec877a37b20211e5fab6268f46da382823360405161021f93929190610c51565b60405180910390a15050565b606060008060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208160020160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000205482600301548280548060200260200160405190810160405280929190818152602001828054801561035657602002820191906000526020600020905b815481526020019060010190808311610342575b505050505092509350935093505093509350939050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508373ffffffffffffffffffffffffffffffffffffffff166323b872dd8330866040518463ffffffff1660e01b81526004016103ec93929190610c8f565b600060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b5050505060018160030160008282546104339190610cc6565b92505081905550428160020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020819055508060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083908060018154018082558091505060019003906000526020600020016000909190919091505560018160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1661064b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064290610d9f565b60405180910390fd5b60008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055508060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__$7f37c9a29f30c6653170c3248a61374303$__6317dc59fa9091856040518363ffffffff1660e01b8152600401610731929190610dd5565b60006040518083038186803b15801561074957600080fd5b505af415801561075d573d6000803e3d6000fd5b50505050600081600301819055508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3084866040518463ffffffff1660e01b81526004016107a893929190610c8f565b600060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b5050505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081f826107f4565b9050919050565b61082f81610814565b811461083a57600080fd5b50565b60008135905061084c81610826565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108a082610857565b810181811067ffffffffffffffff821117156108bf576108be610868565b5b80604052505050565b60006108d26107e0565b90506108de8282610897565b919050565b600067ffffffffffffffff8211156108fe576108fd610868565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61092781610914565b811461093257600080fd5b50565b6000813590506109448161091e565b92915050565b600061095d610958846108e3565b6108c8565b905080838252602082019050602084028301858111156109805761097f61090f565b5b835b818110156109a957806109958882610935565b845260208401935050602081019050610982565b5050509392505050565b600082601f8301126109c8576109c7610852565b5b81356109d884826020860161094a565b91505092915050565b600080604083850312156109f8576109f76107ea565b5b6000610a068582860161083d565b925050602083013567ffffffffffffffff811115610a2757610a266107ef565b5b610a33858286016109b3565b9150509250929050565b600080600060608486031215610a5657610a556107ea565b5b6000610a648682870161083d565b9350506020610a758682870161083d565b9250506040610a8686828701610935565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ac581610914565b82525050565b6000610ad78383610abc565b60208301905092915050565b6000602082019050919050565b6000610afb82610a90565b610b058185610a9b565b9350610b1083610aac565b8060005b83811015610b41578151610b288882610acb565b9750610b3383610ae3565b925050600181019050610b14565b5085935050505092915050565b610b5781610914565b82525050565b60006060820190508181036000830152610b778186610af0565b9050610b866020830185610b4e565b610b936040830184610b4e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0482610914565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3757610c36610bca565b5b600182019050919050565b610c4b81610814565b82525050565b6000606082019050610c666000830186610c42565b8181036020830152610c788185610af0565b9050610c876040830184610c42565b949350505050565b6000606082019050610ca46000830186610c42565b610cb16020830185610c42565b610cbe6040830184610b4e565b949350505050565b6000610cd182610914565b9150610cdc83610914565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1157610d10610bca565b5b828201905092915050565b600082825260208201905092915050565b7f77697468647261772e5f77697468647261773a204552524f522c20557365722060008201527f646f65736e2774206f776e732074686520676976656e20746f6b656e00000000602082015250565b6000610d89603c83610d1c565b9150610d9482610d2d565b604082019050919050565b60006020820190508181036000830152610db881610d7c565b9050919050565b8082525050565b610dcf81610914565b82525050565b6000604082019050610dea6000830185610dbf565b610df76020830184610dc6565b939250505056fea26469706673582212206e350a1f88723b73b95ce8bd52c8cced469911d9f0fcca6878111e578ae747df64736f6c634300080b0033";

type StorageConstructorParams =
  | [linkLibraryAddresses: StorageLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Storage__factory extends ContractFactory {
  constructor(...args: StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Storage__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: StorageLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7f37c9a29f30c6653170c3248a61374303\\$__", "g"),
      linkLibraryAddresses["contracts/libs/Array.sol:Array"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  override connect(signer: Signer): Storage__factory {
    return super.connect(signer) as Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageInterface {
    return new utils.Interface(_abi) as StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}

export interface StorageLibraryAddresses {
  ["contracts/libs/Array.sol:Array"]: string;
}
